name: MATLAB examples

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set path to correct runtime lib so MATLAB does not use an outdated one
      run: echo 'LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libstdc++.so.6' >> $GITHUB_ENV
              
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --target VocalTractLabApi --config ${{env.BUILD_TYPE}}

    - name: Setup MATLAB
      uses: matlab-actions/setup-matlab@v1.0.1
      
    - name: Run MATLAB examples
      uses: matlab-actions/run-command@v1
      with:
        command: addpath('include/VocalTractLabApi'), addpath('lib/Release'), copyfile('examples/ala.ges', 'ala.ges'), copyfile('examples/apfelsine.seg', 'apfelsine.seg'), copyfile('resources/JD3.speaker', 'JD3.speaker'), addpath('examples'), warning('off','MATLAB:audiovideo:audioplayer:noAudioOutputDevice'), example1, example2, example3, example5, exit;
